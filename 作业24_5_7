https://www.nowcoder.com/practice/8c949ea5f36f422594b306a2300315da?tpId=37&&tqId=21224&rp=5&ru=/activity/oj&qru=/ta/huawei/question-ranking
解法1.
//优解
int main() {
    string str;
    while(cin>>str);
    cout<<str.size()<<endl;
    return 0;
}

//解法2
#include <iostream>
#include<string>
using namespace std;

int main() {
    string str;
    getline(cin,str);
    int find=str.rfind(' ');
    if(find!=string::npos)
    cout<<(str.size()-(find+1))<<endl;
    else
     cout<<str.size()<<endl;
    return 0;
}


https://leetcode.cn/problems/search-insert-position/
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        for(int i=0;i<nums.size();i++)
        {
            if(target==nums[i])
            return i;
            else if(target<nums[i])
            return i;
        }
        return nums.size();
    }
};


https://leetcode.cn/problems/running-sum-of-1d-array/
class Solution {
public:
    vector<int> runningSum(vector<int>& nums) {

        for(int i=1;i<nums.size();i++)
        {
            nums[i]+=nums[i-1];
        }
        return nums;
    }
};
